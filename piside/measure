#!/usr/bin/python
#
#   = = M E A S U R E = =
#
# This module collects measurements from the
# GPIO connected devices.
#

import time
import sys

temperature=None
humidity=None

actual_temperature_file='/tmp/actual_temperature'
actual_humidity_file='/tmp/actual_humudity'
actual_co2_file='/tmp/actual_co2'

def read_co2():
    co2=5.0 + (random.randint(0,5) / 10.0)

## Make an actual temp and humidity read
def read_temp():
    global temperature
    global humidity
    global co2

    ##  Possible sensors
    ##  Adafruit_DHT.DHT11
    ##  Adafruit_DHT.DHT22
    ##  Adafruit_DHT.AM2302
    sensor = Adafruit_DHT.AM2302

    ##  The pin is the GPIO pin number not the
    ##  number of the pin on the 40-pin head
    pin = 16

    ## The /tmp/temperature is the file we use to register the latest
    ## temperature measurement.  The file /tmp/humidity is the file we use
    ## to register the latest humidity measurement

    humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)

## Make up random crap for test purposes
def makeup_temp():
    global temperature
    global humidity
    global co2

    temperature=25.0 + (random.randint(0,50) / 10.0)
    humidity=50.0 + (random.randint(0,50) / 10.0)

## Write the result of the reads
def writeout():
    ## Append the measurements to the /tmp/measurements file.
    ## This stores the latest series of temperature measurements we have.
    ## The format is:
    ## YYYY-MM-DDThh:mm:ss temperature humidity

    if temperature is not None:
        with open(actual_temperature_file, 'w') as tmp:
            tmp.write('%0.1f' % (temperature))
    if humidity is not None:
        with open(actual_humidity_file, 'w') as tmp:
            tmp.write('%0.1f' % (humidity))
    if co2 is not None:
        with open(actual_co2_file, 'w') as tmp:
            tmp.write('%0.1f' % (co2))


if __name__ == '__main__':
    # If the first arg is 'test' we fake the data
    if len(sys.argv) > 1 and sys.argv[1] == 'test':
        import random
        makeup_temp()               # Just make something up for testing.
        read_co2()
    else:
        import Adafruit_DHT
        read_temp()                 # Read the real temp
        read_co2()
    writeout()
